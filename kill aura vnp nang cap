getgenv().G = getgenv().G or true
getgenv().Creator = 'https://discord.gg/B3HqPPzFYr - HalloweenGaster'

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer

local range = range or 50
local maxRange = 100000
local screenGuiName = "KillAuraUI"

local hitbox -- Part hitbox
local color = Color3.fromRGB(0, 170, 255)
local red, green, blue = 0, 170, 255

local function makeDraggable(frame)
    local dragging, dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)
end

local function createRangeHitbox()
    local character = localPlayer.Character
    if not character then return end

    if hitbox and hitbox.Parent then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            hitbox.Size = Vector3.new(range*2, range*2, range*2)
            hitbox.CFrame = rootPart.CFrame
            hitbox.Color = color
        else
            hitbox:Destroy()
            hitbox = nil
        end
        return
    end

    hitbox = Instance.new("Part")
    hitbox.Name = "KillAuraRangeHitbox"
    hitbox.Anchored = true
    hitbox.CanCollide = false
    hitbox.Transparency = 0.7
    hitbox.Material = Enum.Material.Neon
    hitbox.Color = color
    hitbox.Parent = workspace

    RunService.Heartbeat:Connect(function()
        local char = localPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            hitbox.Size = Vector3.new(range*2, range*2, range*2)
            hitbox.CFrame = char.HumanoidRootPart.CFrame
            hitbox.Color = color
        else
            if hitbox then
                hitbox:Destroy()
                hitbox = nil
            end
        end
    end)
end

local function createColorSlider(parent, position, labelText, initialValue, onChange)
    local sliderBg = Instance.new("Frame")
    sliderBg.Size = UDim2.new(1, -40, 0, 20)
    sliderBg.Position = position
    sliderBg.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    sliderBg.BorderSizePixel = 0
    sliderBg.ClipsDescendants = true
    sliderBg.Parent = parent

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(initialValue / 255, 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderFill.Parent = sliderBg

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 20, 0, 20)
    sliderButton.Position = UDim2.new(initialValue / 255, -10, 0, 0)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.BorderSizePixel = 0
    sliderButton.Text = ""
    sliderButton.Parent = sliderBg
    sliderButton.AutoButtonColor = false
    sliderButton.Active = true
    sliderButton.Draggable = true

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 40, 0, 20)
    label.Position = UDim2.new(0, -45, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.SourceSans
    label.TextSize = 16
    label.Parent = sliderBg

    local function updateSlider(x)
        local relativeX = math.clamp(x - sliderBg.AbsolutePosition.X, 0, sliderBg.AbsoluteSize.X)
        local value = math.floor((relativeX / sliderBg.AbsoluteSize.X) * 255)
        sliderFill.Size = UDim2.new(value / 255, 0, 1, 0)
        sliderButton.Position = UDim2.new(value / 255, -10, 0, 0)
        onChange(value)
    end

    sliderButton.MouseButton1Down:Connect(function()
        local conn
        conn = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                updateSlider(input.Position.X)
            end
        end)
        local releaseConn
        releaseConn = UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                conn:Disconnect()
                releaseConn:Disconnect()
            end
        end)
    end)

    return sliderBg
end

local function createUI()
    if localPlayer.PlayerGui:FindFirstChild(screenGuiName) then return end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = screenGuiName
    screenGui.ResetOnSpawn = false
    screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 320, 0, 190) -- rộng hơn để có chỗ nhập số
    frame.Position = UDim2.new(0, 20, 0, 50)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    makeDraggable(frame)

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.Text = "Kill Aura Range"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 20
    title.Parent = frame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 60, 0, 30)
    toggleButton.Position = UDim2.new(1, -70, 0, 10)
    toggleButton.BackgroundColor3 = getgenv().G and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextSize = 18
    toggleButton.Text = getgenv().G and "ON" or "OFF"
    toggleButton.Parent = frame

    toggleButton.MouseButton1Click:Connect(function()
        getgenv().G = not getgenv().G
        if getgenv().G then
            toggleButton.Text = "ON"
            toggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        else
            toggleButton.Text = "OFF"
            toggleButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
        end
    end)

    local sliderBg = Instance.new("Frame")
    sliderBg.Size = UDim2.new(1, -110, 0, 20)
    sliderBg.Position = UDim2.new(0, 20, 0, 50)
    sliderBg.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    sliderBg.Parent = frame
    sliderBg.BorderSizePixel = 0
    sliderBg.ClipsDescendants = true

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(range / maxRange, 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    sliderFill.Parent = sliderBg

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 20, 0, 20)
    sliderButton.Position = UDim2.new(range / maxRange, -10, 0, 0)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.BorderSizePixel = 0
    sliderButton.Text = ""
    sliderButton.Parent = sliderBg
    sliderButton.AutoButtonColor = false
    sliderButton.Active = true
    sliderButton.Draggable = true

    local rangeLabel = Instance.new("TextLabel")
    rangeLabel.Size = UDim2.new(0, 100, 0, 20)
    rangeLabel.Position = UDim2.new(0, 20, 0, 80)
    rangeLabel.BackgroundTransparency = 1
    rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    rangeLabel.Font = Enum.Font.SourceSans
    rangeLabel.TextSize = 18
    rangeLabel.Text = "Range: " .. tostring(range)
    rangeLabel.Parent = frame

    local function updateRange(x)
        local relativeX = math.clamp(x - sliderBg.AbsolutePosition.X, 0, sliderBg.AbsoluteSize.X)
        local newRange = math.floor((relativeX / sliderBg.AbsoluteSize.X) * maxRange)
        range = newRange
        sliderFill.Size = UDim2.new(range / maxRange, 0, 1, 0)
        sliderButton.Position = UDim2.new(range / maxRange, -10, 0, 0)
        rangeLabel.Text = "Range: " .. tostring(range)
        rangeInput.Text = tostring(range)
        createRangeHitbox()
    end

    sliderButton.MouseButton1Down:Connect(function()
        local connection
        connection = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                updateRange(input.Position.X)
            end
        end)
        local releaseConn
        releaseConn = UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                connection:Disconnect()
                releaseConn:Disconnect()
            end
        end)
    end)

    -- TextBox nhập số range
    local rangeInput = Instance.new("TextBox")
    rangeInput.Size = UDim2.new(0, 80, 0, 20)
    rangeInput.Position = UDim2.new(1, -90, 0, 50)
    rangeInput.PlaceholderText = tostring(range)
    rangeInput.Text = tostring(range)
    rangeInput.ClearTextOnFocus = false
    rangeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    rangeInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    rangeInput.Font = Enum.Font.SourceSans
    rangeInput.TextSize = 18
    rangeInput.Parent = frame

    rangeInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local num = tonumber(rangeInput.Text)
            if num and num >= 0 and num <= maxRange then
                range = math.floor(num)
                sliderFill.Size = UDim2.new(range / maxRange, 0, 1, 0)
                sliderButton.Position = UDim2.new(range / maxRange, -10, 0, 0)
                rangeLabel.Text = "Range: " .. tostring(range)
                createRangeHitbox()
            else
                rangeInput.Text = tostring(range)
            end
        end
    end)

    -- Slider màu R G B
    local redSlider = createColorSlider(frame, UDim2.new(0, 20, 0, 110), "R", red, function(val)
        red = val
        color = Color3.fromRGB(red, green, blue)
        createRangeHitbox()
    end)

    local greenSlider = createColorSlider(frame, UDim2.new(0, 20, 0, 135), "G", green, function(val)
        green = val
        color = Color3.fromRGB(red, green, blue)
        createRangeHitbox()
    end)

    local blueSlider = createColorSlider(frame, UDim2.new(0, 20, 0, 160), "B", blue, function(val)
        blue = val
        color = Color3.fromRGB(red, green, blue)
        createRangeHitbox()
    end)

    createRangeHitbox()
end

createUI()

localPlayer.CharacterAdded:Connect(function()
    wait(1)
    createUI()
    createRangeHitbox()
end)

spawn(function()
    while true do
        wait(0.9)
        if getgenv().G and getgenv().Creator == 'https://discord.gg/B3HqPPzFYr - HalloweenGaster' then
            local character = localPlayer.Character
            if not character or not character:FindFirstChild("HumanoidRootPart") then
                continue
            end
            local rootPart = character.HumanoidRootPart

            sethiddenproperty(localPlayer, "SimulationRadius", range + 10)
            sethiddenproperty(localPlayer, "MaxSimulationRadius", range + 10)

            for _, d in pairs(game.Workspace:GetDescendants()) do
                if d.ClassName == 'Humanoid' and d.Parent.Name ~= localPlayer.Name then
                    local enemyRoot = d.Parent:FindFirstChild("HumanoidRootPart")
                    if enemyRoot then
                        local dist = (enemyRoot.Position - rootPart.Position).Magnitude
                        if dist <= range then
                            d.Health = 0
                        end
                    end
                end
            end
        end
    end
end)
